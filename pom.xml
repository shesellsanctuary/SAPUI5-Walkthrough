<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.sap.CloudSCAME.SAPUI5-walkthrough</groupId>
    <artifactId>SAPUI5-walkthrough</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>${project.artifactId}</name>

    <properties>
        <npm.registry>http://nexus.wdf.sap.corp:8081/nexus/content/groups/build.milestones.npm/</npm.registry>

        <download.node.phase>generate-resources</download.node.phase>
        <download.phantomjs.phase>generate-resources</download.phantomjs.phase>
        <npm.install.phase>process-resources</npm.install.phase>
        <grunt.build.phase>compile</grunt.build.phase>
        <grunt.test.phase>compile</grunt.test.phase>

        <node.version>6.9.1</node.version>
        <npm.version>4.2.0</npm.version>
        <phantomjs.version>2.1.1</phantomjs.version>
        <frontend-maven-plugin.version>1.3</frontend-maven-plugin.version>
        <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
        <phantomjs-maven-plugin.version>0.7</phantomjs-maven-plugin.version>

        <skip.eslint>false</skip.eslint>
        <skip.grunt.build>false</skip.grunt.build>
        <skip.grunt.test>false</skip.grunt.test>

        <!-- Sonar properties -->
        <sonar.login></sonar.login><!-- Your SonarQube Token -->
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.javascript.qunit.reportPath>target/junit</sonar.javascript.qunit.reportPath>
        <sonar.javascript.eslint.reportPath>target/eslint/eslint.xml</sonar.javascript.eslint.reportPath>
        <sonar.javascript.jscoverage.sourcePath>webapp</sonar.javascript.jscoverage.sourcePath>
        <sonar.javascript.jscoverage.reportPath>target/karma-coverage/report/cobertura.xml</sonar.javascript.jscoverage.reportPath>
        <sonar.language>js@sap</sonar.language>
        <sonar.sources>pom.xml,webapp,target/eslint,target/junit,target/karma-coverage</sonar.sources>
        <sonar.profile>SAPUI5_1_0_0</sonar.profile>
        <sonar.host.url>http://sonarci.wdf.sap.corp:8080/sonar</sonar.host.url>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!-- phantomjs-maven-plugin needs maven 3.1+ -->
    <prerequisites>
        <maven>3.1</maven>
    </prerequisites>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- Sonar Maven Plugin -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>download-node</id>
                        <phase>${download.node.phase}</phase>
                        <goals>
                            <goal>${node.download.goal}</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.nodejs.download.node</groupId>
                                    <artifactId>node</artifactId>
                                    <version>${node.version}</version>
                                    <type>${node.type}</type>
                                    <classifier>${node.classifier}</classifier>
                                    <overWrite>true</overWrite>
                                    <includes>node-v${node.version}-${node.classifier}/bin/node</includes>
                                    <outputDirectory>node</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>move-node-executable</id>
                        <phase>${download.node.phase}</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy file="node/${node.exe.source}" tofile="node/${node.exe.target}" />
                                <chmod file="node/${node.exe.target}" perm="ugo+rx" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <artifactId>ant</artifactId>
                                <groupId>ant</groupId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- Run Grunt Build, Test-ci and npm install task -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>${frontend-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>install-node-and-npm</id>
                        <phase>${download.node.phase}</phase>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>v${node.version}</nodeVersion>
                            <npmVersion>${npm.version}</npmVersion>
                            <npmDownloadRoot>${npm.registry}/npm/-/</npmDownloadRoot>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm-install</id>
                        <phase>${npm.install.phase}</phase>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install --registry=${npm.registry}</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>grunt build</id>
                        <phase>${grunt.build.phase}</phase>
                        <goals>
                            <goal>grunt</goal>
                        </goals>
                        <configuration>
                            <arguments>build</arguments>
                            <skip>${skip.grunt.build}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Generate Zip -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2-beta-5</version>
                <configuration>
                    <descriptors>
                        <descriptor>${basedir}/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>sonar-reports</id>
            <build>
                <plugins>
                    <!-- PMD maven plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                        <version>3.7</version>
                        <configuration>
                            <language>javascript</language>
                            <rulesets>
                                <ruleset>http://nexus:8081/nexus/content/repositories/build.milestones/com/sap/ldi/qi/SAPDefaultProfile/1.4.6/SAPDefaultProfile-1.4.6-pmd.xml</ruleset>
                            </rulesets>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>pmd</goal>
                                    <goal>cpd</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>test</id>
            <build>
                <plugins>
                    <!-- Run ESlint -->
                    <plugin>
                        <groupId>com.sap.eslint</groupId>
                        <artifactId>eslint-maven-plugin</artifactId>
                        <version>0.1.14</version>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>eslint</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <skip>${skip.eslint}</skip>
                            <version>1.1.0</version>
                            <failOnError>true</failOnError>
                            <useEsLintRc>true</useEsLintRc>
                            <customBaseFile>.eslintrc.json</customBaseFile>
                            <includes>
                                <include>webapp/*.js</include>
                                <include>webapp/**/*.js</include>
                            </includes>
                            <formatters>
                                <formatter implementation="com.sap.eslint.java.formatters.JSLintSonarFormatter">
                                    <outputFile>${project.build.directory}/eslint/eslint.xml</outputFile>
                                </formatter>
                            </formatters>
                        </configuration>
                    </plugin>
                    <!-- download phantomjs -->
                    <plugin>
                        <groupId>com.github.klieber</groupId>
                        <artifactId>phantomjs-maven-plugin</artifactId>
                        <version>${phantomjs-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>download-install-phantomjs</id>
                                <phase>${download.phantomjs.phase}</phase>
                                <goals>
                                    <goal>install</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <version>${phantomjs.version}</version>
                        </configuration>
                    </plugin>
                    <!-- run integration and unit tests -->
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>${frontend-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>grunt test-ci</id>
                                <phase>${grunt.test.phase}</phase>
                                <goals>
                                    <goal>grunt</goal>
                                </goals>
                                <configuration>
                                    <arguments>test-ci</arguments>
                                    <skip>${skip.grunt.test}</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>cloud-deployment</id>
            <properties>
                <!-- Cloud settings -->
                <cloud.gitBranch>master</cloud.gitBranch>
                <cloud.applicationVersion>${project.version}-${maven.build.timestamp}</cloud.applicationVersion>
                <cloud.applicationVersionAlias></cloud.applicationVersionAlias>
                <cloud.skipCreate>false</cloud.skipCreate>
                <cloud.skipCreateVersion>false</cloud.skipCreateVersion>
                <cloud.skipActivateVersion>false</cloud.skipActivateVersion>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.sap.ui5.tools.maven</groupId>
                            <artifactId>nwcloud-maven-plugin</artifactId>
                            <version>0.9.0</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>cloud-set-application</id>
                                <goals>
                                    <goal>regex-property</goal>
                                </goals>
                                <configuration>
                                    <name>cloud.application</name>
                                    <value>${project.artifactId}</value>
                                    <regex>[.-]</regex>
                                    <replacement></replacement>
                                    <failIfNoMatch>false</failIfNoMatch>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.sap.ui5.tools.maven</groupId>
                        <artifactId>nwcloud-maven-plugin</artifactId>
                        <executions>
                            <!-- create the application -->
                            <execution>
                                <id>cloud-create</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>helium-create</goal>
                                </goals>
                                <configuration>
                                    <application>${cloud.application}</application>
                                    <skip>${cloud.skipCreate}</skip>
                                </configuration>
                            </execution>
                            <!-- prepare the workspace in the target folder -->
                            <execution>
                                <id>cloud-prepare</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>helium-prepare</goal>
                                </goals>
                                <configuration>
                                    <application>${cloud.application}</application>
                                    <applicationVersion>${cloud.applicationVersion}</applicationVersion>
                                    <applicationVersionAlias>${cloud.applicationVersionAlias}</applicationVersionAlias>
                                </configuration>
                            </execution>
                            <!-- upload the new sources into the remote Git repository -->
                            <execution>
                                <id>cloud-upload</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>helium-upload</goal>
                                </goals>
                                <configuration>
                                    <application>${cloud.application}</application>
                                    <applicationVersion>${cloud.applicationVersion}</applicationVersion>
                                    <applicationVersionAlias>${cloud.applicationVersionAlias}</applicationVersionAlias>
                                </configuration>
                            </execution>
                            <!-- create the version of the application -->
                            <execution>
                                <id>cloud-create-version</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>helium-create-version</goal>
                                </goals>
                                <configuration>
                                    <application>${cloud.application}</application>
                                    <applicationVersion>${cloud.applicationVersion}</applicationVersion>
                                    <applicationVersionAlias>${cloud.applicationVersionAlias}</applicationVersionAlias>
                                    <skip>${cloud.skipCreateVersion}</skip>
                                </configuration>
                            </execution>
                            <!-- activate the version of the application -->
                            <execution>
                                <id>cloud-activate-version</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>helium-activate-version</goal>
                                    <goal>helium-stop</goal>
                                    <goal>helium-start</goal>
                                </goals>
                                <configuration>
                                    <application>${cloud.application}</application>
                                    <applicationVersion>${cloud.applicationVersion}</applicationVersion>
                                    <applicationVersionAlias>${cloud.applicationVersionAlias}</applicationVersionAlias>
                                    <skip>${cloud.skipActivateVersion}</skip>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <landscape>${cloud.landscape}</landscape>
                            <account>${cloud.account}</account>
                            <username>${cloud.username}</username>
                            <password>${cloud.password}</password>
                            <gitEmail>${cloud.gitEmail}</gitEmail>
                            <gitBranch>${cloud.gitBranch}</gitBranch>
                            <httpsProxyHost>proxy</httpsProxyHost>
                            <httpsProxyPort>8080</httpsProxyPort>
                            <httpsNonProxyHosts>localhost,*sap.corp</httpsNonProxyHosts>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-archive</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <!-- Unpack the WAR of the current project! -->
                                        <!-- Needs to be installed in local repo or deployed to central repo before!  -->
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <type>zip</type>
                                            <excludes>META-INF/**,WEB-INF/**,OSGI-INF/**</excludes>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>${project.build.directory}/${cloud.application}</outputDirectory>
                                    <overWriteReleases>false</overWriteReleases>
                                    <overWriteSnapshots>true</overWriteSnapshots>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <node.download.goal>copy</node.download.goal>
                <node.type>exe</node.type>
                <node.classifier>win-x64</node.classifier>
                <node.exe.source>node-${node.version}-win-x64.exe</node.exe.source>
                <node.exe.target>node.exe</node.exe.target>
            </properties>
        </profile>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <node.download.goal>unpack</node.download.goal>
                <node.type>tar.gz</node.type>
                <node.classifier>linux-x64</node.classifier>
                <node.exe.source>node-v${node.version}-linux-x64/bin/node</node.exe.source>
                <node.exe.target>node</node.exe.target>
            </properties>
        </profile>
        <profile>
            <id>mac</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <node.download.goal>unpack</node.download.goal>
                <node.type>tar.gz</node.type>
                <node.classifier>darwin-x64</node.classifier>
                <node.exe.source>node-v${node.version}-darwin-x64/bin/node</node.exe.source>
                <node.exe.target>node</node.exe.target>
            </properties>
        </profile>
    </profiles>
</project>
